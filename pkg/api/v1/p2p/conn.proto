syntax = "proto3";

// Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package v1.p2p;

option go_package = "github.com/bhojpur/state/pkg/api/v1/p2p;p2p";

import "gogoproto/gogo.proto";
import "pkg/api/v1/crypto/keys.proto";

message PacketPing {}

message PacketPong {}

message PacketMsg {
  int32 channel_id = 1 [(gogoproto.customname) = "ChannelID"];
  bool  eof        = 2 [(gogoproto.customname) = "EOF"];
  bytes data       = 3;
}

message Packet {
  oneof sum {
    PacketPing packet_ping = 1;
    PacketPong packet_pong = 2;
    PacketMsg  packet_msg  = 3;
  }
}

message AuthSigMessage {
  v1.crypto.PublicKey pub_key = 1 [(gogoproto.nullable) = false];
  bytes                       sig     = 2;
}