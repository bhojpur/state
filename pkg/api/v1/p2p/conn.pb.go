// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: pkg/api/v1/p2p/conn.proto

// Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package p2p

import (
	crypto "github.com/bhojpur/state/pkg/api/v1/crypto"
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PacketPing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PacketPing) Reset() {
	*x = PacketPing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_p2p_conn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketPing) ProtoMessage() {}

func (x *PacketPing) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_p2p_conn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketPing.ProtoReflect.Descriptor instead.
func (*PacketPing) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_p2p_conn_proto_rawDescGZIP(), []int{0}
}

type PacketPong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PacketPong) Reset() {
	*x = PacketPong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_p2p_conn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketPong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketPong) ProtoMessage() {}

func (x *PacketPong) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_p2p_conn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketPong.ProtoReflect.Descriptor instead.
func (*PacketPong) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_p2p_conn_proto_rawDescGZIP(), []int{1}
}

type PacketMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId int32  `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Eof       bool   `protobuf:"varint,2,opt,name=eof,proto3" json:"eof,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PacketMsg) Reset() {
	*x = PacketMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_p2p_conn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketMsg) ProtoMessage() {}

func (x *PacketMsg) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_p2p_conn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketMsg.ProtoReflect.Descriptor instead.
func (*PacketMsg) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_p2p_conn_proto_rawDescGZIP(), []int{2}
}

func (x *PacketMsg) GetChannelId() int32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *PacketMsg) GetEof() bool {
	if x != nil {
		return x.Eof
	}
	return false
}

func (x *PacketMsg) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Packet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Sum:
	//	*Packet_PacketPing
	//	*Packet_PacketPong
	//	*Packet_PacketMsg
	Sum isPacket_Sum `protobuf_oneof:"sum"`
}

func (x *Packet) Reset() {
	*x = Packet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_p2p_conn_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_p2p_conn_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_p2p_conn_proto_rawDescGZIP(), []int{3}
}

func (m *Packet) GetSum() isPacket_Sum {
	if m != nil {
		return m.Sum
	}
	return nil
}

func (x *Packet) GetPacketPing() *PacketPing {
	if x, ok := x.GetSum().(*Packet_PacketPing); ok {
		return x.PacketPing
	}
	return nil
}

func (x *Packet) GetPacketPong() *PacketPong {
	if x, ok := x.GetSum().(*Packet_PacketPong); ok {
		return x.PacketPong
	}
	return nil
}

func (x *Packet) GetPacketMsg() *PacketMsg {
	if x, ok := x.GetSum().(*Packet_PacketMsg); ok {
		return x.PacketMsg
	}
	return nil
}

type isPacket_Sum interface {
	isPacket_Sum()
}

type Packet_PacketPing struct {
	PacketPing *PacketPing `protobuf:"bytes,1,opt,name=packet_ping,json=packetPing,proto3,oneof"`
}

type Packet_PacketPong struct {
	PacketPong *PacketPong `protobuf:"bytes,2,opt,name=packet_pong,json=packetPong,proto3,oneof"`
}

type Packet_PacketMsg struct {
	PacketMsg *PacketMsg `protobuf:"bytes,3,opt,name=packet_msg,json=packetMsg,proto3,oneof"`
}

func (*Packet_PacketPing) isPacket_Sum() {}

func (*Packet_PacketPong) isPacket_Sum() {}

func (*Packet_PacketMsg) isPacket_Sum() {}

type AuthSigMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey *crypto.PublicKey `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	Sig    []byte            `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (x *AuthSigMessage) Reset() {
	*x = AuthSigMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1_p2p_conn_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthSigMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthSigMessage) ProtoMessage() {}

func (x *AuthSigMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1_p2p_conn_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthSigMessage.ProtoReflect.Descriptor instead.
func (*AuthSigMessage) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1_p2p_conn_proto_rawDescGZIP(), []int{4}
}

func (x *AuthSigMessage) GetPubKey() *crypto.PublicKey {
	if x != nil {
		return x.PubKey
	}
	return nil
}

func (x *AuthSigMessage) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

var File_pkg_api_v1_p2p_conn_proto protoreflect.FileDescriptor

var file_pkg_api_v1_p2p_conn_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x32, 0x70,
	0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x76, 0x31, 0x2e,
	0x70, 0x32, 0x70, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x70, 0x6b, 0x67, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x6b, 0x65, 0x79,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0c, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x50, 0x69, 0x6e, 0x67, 0x22, 0x0c, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x50,
	0x6f, 0x6e, 0x67, 0x22, 0x68, 0x0a, 0x09, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x73, 0x67,
	0x12, 0x2c, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x0d, 0xe2, 0xde, 0x1f, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x44, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x03, 0x65, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x07, 0xe2, 0xde, 0x1f,
	0x03, 0x45, 0x4f, 0x46, 0x52, 0x03, 0x65, 0x6f, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb1, 0x01,
	0x0a, 0x06, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x76, 0x31, 0x2e, 0x70, 0x32, 0x70, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x12,
	0x35, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x32, 0x70, 0x2e, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x50, 0x6f, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e,
	0x70, 0x32, 0x70, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x48, 0x00, 0x52,
	0x09, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x42, 0x05, 0x0a, 0x03, 0x73, 0x75,
	0x6d, 0x22, 0x57, 0x0a, 0x0e, 0x41, 0x75, 0x74, 0x68, 0x53, 0x69, 0x67, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x68, 0x6f, 0x6a, 0x70, 0x75, 0x72,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x32, 0x70, 0x3b, 0x70, 0x32, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_pkg_api_v1_p2p_conn_proto_rawDescOnce sync.Once
	file_pkg_api_v1_p2p_conn_proto_rawDescData = file_pkg_api_v1_p2p_conn_proto_rawDesc
)

func file_pkg_api_v1_p2p_conn_proto_rawDescGZIP() []byte {
	file_pkg_api_v1_p2p_conn_proto_rawDescOnce.Do(func() {
		file_pkg_api_v1_p2p_conn_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_api_v1_p2p_conn_proto_rawDescData)
	})
	return file_pkg_api_v1_p2p_conn_proto_rawDescData
}

var file_pkg_api_v1_p2p_conn_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pkg_api_v1_p2p_conn_proto_goTypes = []interface{}{
	(*PacketPing)(nil),       // 0: v1.p2p.PacketPing
	(*PacketPong)(nil),       // 1: v1.p2p.PacketPong
	(*PacketMsg)(nil),        // 2: v1.p2p.PacketMsg
	(*Packet)(nil),           // 3: v1.p2p.Packet
	(*AuthSigMessage)(nil),   // 4: v1.p2p.AuthSigMessage
	(*crypto.PublicKey)(nil), // 5: v1.crypto.PublicKey
}
var file_pkg_api_v1_p2p_conn_proto_depIdxs = []int32{
	0, // 0: v1.p2p.Packet.packet_ping:type_name -> v1.p2p.PacketPing
	1, // 1: v1.p2p.Packet.packet_pong:type_name -> v1.p2p.PacketPong
	2, // 2: v1.p2p.Packet.packet_msg:type_name -> v1.p2p.PacketMsg
	5, // 3: v1.p2p.AuthSigMessage.pub_key:type_name -> v1.crypto.PublicKey
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pkg_api_v1_p2p_conn_proto_init() }
func file_pkg_api_v1_p2p_conn_proto_init() {
	if File_pkg_api_v1_p2p_conn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_api_v1_p2p_conn_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketPing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_p2p_conn_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketPong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_p2p_conn_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_p2p_conn_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Packet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1_p2p_conn_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthSigMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_api_v1_p2p_conn_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Packet_PacketPing)(nil),
		(*Packet_PacketPong)(nil),
		(*Packet_PacketMsg)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_api_v1_p2p_conn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_api_v1_p2p_conn_proto_goTypes,
		DependencyIndexes: file_pkg_api_v1_p2p_conn_proto_depIdxs,
		MessageInfos:      file_pkg_api_v1_p2p_conn_proto_msgTypes,
	}.Build()
	File_pkg_api_v1_p2p_conn_proto = out.File
	file_pkg_api_v1_p2p_conn_proto_rawDesc = nil
	file_pkg_api_v1_p2p_conn_proto_goTypes = nil
	file_pkg_api_v1_p2p_conn_proto_depIdxs = nil
}
