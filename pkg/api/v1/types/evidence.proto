syntax = "proto3";

// Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package v1.types;

option go_package = "github.com/bhojpur/state/pkg/api/v1/types;types";

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "pkg/api/v1/types/types.proto";
import "pkg/api/v1/types/validator.proto";

message Evidence {
  oneof sum {
    DuplicateVoteEvidence     duplicate_vote_evidence      = 1;
    LightClientAttackEvidence light_client_attack_evidence = 2;
  }
}

// DuplicateVoteEvidence contains evidence of a validator signed two conflicting
// votes.
message DuplicateVoteEvidence {
  v1.types.Vote     vote_a             = 1;
  v1.types.Vote     vote_b             = 2;
  int64                     total_voting_power = 3;
  int64                     validator_power    = 4;
  google.protobuf.Timestamp timestamp          = 5
      [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
}

// LightClientAttackEvidence contains evidence of a set of validators attempting
// to mislead a light client.
message LightClientAttackEvidence {
  v1.types.LightBlock conflicting_block            = 1;
  int64                       common_height                = 2;
  repeated v1.types.Validator byzantine_validators = 3;
  int64                               total_voting_power   = 4;
  google.protobuf.Timestamp           timestamp            = 5
      [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
}

message EvidenceList {
  repeated Evidence evidence = 1 [(gogoproto.nullable) = false];
}