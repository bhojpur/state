syntax = "proto3";

// Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package v1.consensus;

option go_package = "github.com/bhojpur/state/pkg/api/v1/consensus;consensus";

import "gogoproto/gogo.proto";
import "pkg/api/v1/consensus/types.proto";
import "pkg/api/v1/types/events.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

// MsgInfo are msgs from the reactor which may update the state
message MsgInfo {
  Message msg     = 1 [(gogoproto.nullable) = false];
  string  peer_id = 2 [(gogoproto.customname) = "PeerID"];
}

// TimeoutInfo internally generated messages which may update the state
message TimeoutInfo {
  google.protobuf.Duration duration = 1
      [(gogoproto.nullable) = false, (gogoproto.stdduration) = true];
  int64  height = 2;
  int32  round  = 3;
  uint32 step   = 4;
}

// EndHeight marks the end of the given height inside WAL.
// @internal used by scripts/wal2json util.
message EndHeight {
  int64 height = 1;
}

message WALMessage {
  oneof sum {
    v1.types.EventDataRoundState event_data_round_state = 1;
    MsgInfo                              msg_info               = 2;
    TimeoutInfo                          timeout_info           = 3;
    EndHeight                            end_height             = 4;
  }
}

// TimedWALMessage wraps WALMessage and adds Time for debugging purposes.
message TimedWALMessage {
  google.protobuf.Timestamp time = 1 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  WALMessage                msg  = 2;
}