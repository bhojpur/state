syntax = "proto3";

// Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package v1.statesync;

option go_package = "github.com/bhojpur/state/pkg/api/v1/statesync;statesync";

import "gogoproto/gogo.proto";
import "pkg/api/v1/types/types.proto";
import "pkg/api/v1/types/params.proto";

message Message {
  oneof sum {
    SnapshotsRequest   snapshots_request    = 1;
    SnapshotsResponse  snapshots_response   = 2;
    ChunkRequest       chunk_request        = 3;
    ChunkResponse      chunk_response       = 4;
    LightBlockRequest  light_block_request  = 5;
    LightBlockResponse light_block_response = 6;
    ParamsRequest      params_request       = 7;
    ParamsResponse     params_response      = 8;
  }
}

message SnapshotsRequest {}

message SnapshotsResponse {
  uint64 height   = 1;
  uint32 format   = 2;
  uint32 chunks   = 3;
  bytes  hash     = 4;
  bytes  metadata = 5;
}

message ChunkRequest {
  uint64 height = 1;
  uint32 format = 2;
  uint32 index  = 3;
}

message ChunkResponse {
  uint64 height  = 1;
  uint32 format  = 2;
  uint32 index   = 3;
  bytes  chunk   = 4;
  bool   missing = 5;
}

message LightBlockRequest {
  uint64 height = 1;
}

message LightBlockResponse {
  v1.types.LightBlock light_block = 1;
}

message ParamsRequest {
  uint64 height = 1;
}

message ParamsResponse {
  uint64                           height           = 1;
  v1.types.ConsensusParams consensus_params = 2
      [(gogoproto.nullable) = false];
}